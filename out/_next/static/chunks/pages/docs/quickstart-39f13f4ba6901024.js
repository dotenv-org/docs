(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3854],{4731:function(n,s,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/quickstart",function(){return o(3809)}])},1370:function(n,s,o){"use strict";o.d(s,{c:function(){return r}});var e=o(5893),a=o(5675),t=o.n(a);function r(n){return(0,e.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,e.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,e.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,e.jsxs)("div",{className:"flex py-1 px-2",children:[(0,e.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,e.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,e.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,e.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,e.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,e.jsx)("div",{className:"p-0",children:(0,e.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,e.jsx)(t(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},5027:function(n,s,o){"use strict";o.d(s,{C:function(){return a}});var e=o(5893);function a(n){return(0,e.jsxs)("svg",{fill:"none",viewBox:"0 0 48 48",...n,children:[(0,e.jsxs)("g",{fill:"#00ACD7",clipPath:"url(#a)",children:[(0,e.jsx)("path",{fillRule:"evenodd",d:"M5.8 19.334c-.08 0-.093-.054-.067-.107l.4-.533a.421.421 0 0 1 .227-.08h6.893c.08 0 .094.053.067.106l-.334.507c-.04.053-.133.12-.2.12L5.8 19.32v.014Zm-2.92 1.773c-.08 0-.093-.04-.053-.107l.4-.52c.04-.053.133-.093.213-.093h8.8c.093 0 .133.053.107.12l-.16.453c-.014.08-.094.134-.174.134H2.88v.013Zm4.68 1.773c-.08 0-.107-.053-.067-.12l.267-.48c.053-.053.133-.12.2-.12h3.866c.08 0 .12.067.12.134l-.04.466c0 .08-.08.134-.133.134L7.56 22.88Zm20.053-3.906-3.24.853c-.293.08-.32.093-.56-.2-.293-.32-.506-.533-.92-.733a3.36 3.36 0 0 0-3.493.293 4.107 4.107 0 0 0-1.973 3.667 3.027 3.027 0 0 0 2.613 3.04c1.306.173 2.413-.294 3.28-1.28l.533-.707H20.12c-.4 0-.507-.267-.373-.587.253-.6.72-1.6.986-2.106a.533.533 0 0 1 .48-.307h7.04c-.04.533-.04 1.04-.12 1.573-.213 1.387-.733 2.667-1.586 3.787a8.053 8.053 0 0 1-5.507 3.28 6.839 6.839 0 0 1-5.2-1.28A6.065 6.065 0 0 1 13.386 24c-.24-2.106.374-4 1.654-5.666A8.573 8.573 0 0 1 20.44 15a6.667 6.667 0 0 1 5.12.934c1.027.666 1.76 1.6 2.253 2.733.107.173.027.267-.2.32v-.013Z",clipRule:"evenodd"}),(0,e.jsx)("path",{d:"M34 29.667a7.253 7.253 0 0 1-4.707-1.707 6.066 6.066 0 0 1-2.08-3.733 7.373 7.373 0 0 1 1.56-5.827 8.107 8.107 0 0 1 5.413-3.226 7.173 7.173 0 0 1 5.507.986 6.015 6.015 0 0 1 2.72 4.307 7.467 7.467 0 0 1-2.227 6.547 8.854 8.854 0 0 1-4.626 2.48c-.534.093-1.054.106-1.547.173H34Zm4.613-7.813c-.027-.254-.027-.44-.067-.64a3.186 3.186 0 0 0-3.933-2.547 4.227 4.227 0 0 0-3.387 3.36A3.187 3.187 0 0 0 33 25.68c1.066.454 2.133.4 3.16-.133a4.227 4.227 0 0 0 2.453-3.68v-.013Z"})]}),(0,e.jsx)("defs",{children:(0,e.jsx)("clipPath",{id:"a",children:(0,e.jsx)("path",{fill:"#fff",d:"M4 4h40v40H4z"})})})]})}},9183:function(n,s,o){"use strict";o.d(s,{q:function(){return a}});var e=o(5893);function a(n){return(0,e.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,e.jsx)("path",{d:"M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.08-0.383 c0.585-0.203,0.703-0.25,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.99,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.57,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z"})})}},3044:function(n,s,o){"use strict";o.d(s,{g:function(){return a}});var e=o(5893);function a(n){return(0,e.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor",...n,children:(0,e.jsx)("path",{d:"M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.18l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09zm13.09 3.95l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08z"})})}},8455:function(n,s,o){"use strict";o.d(s,{w:function(){return a}});var e=o(5893);function a(n){return(0,e.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,e.jsx)("path",{d:"M20.156.083c3.033.525 3.893 2.598 3.829 4.77L24 4.822 22.635 22.71 4.89 23.926h.016C3.433 23.864.15 23.729 0 19.139l1.645-3 2.819 6.586.503 1.172 2.805-9.144-.03.007.016-.03 9.255 2.956-1.396-5.431-.99-3.9 8.82-.569-.615-.51L16.5 2.114 20.159.073l-.003.01zM0 19.089zM5.13 5.073c3.561-3.533 8.157-5.621 9.922-3.84 1.762 1.777-.105 6.105-3.673 9.636-3.563 3.532-8.103 5.734-9.864 3.957-1.766-1.777.045-6.217 3.612-9.75l.003-.003z"})})}},3809:function(n,s,o){"use strict";o.r(s),o.d(s,{__N_SSG:function(){return d},default:function(){return v}});var e=o(5893),a=o(1151);function t(n){return(0,e.jsx)("div",{className:"rounded-md p-7 border border-zinc-200 dark:border-zinc-700 bg-zinc-100 dark:bg-zinc-100",children:(0,e.jsxs)("video",{controls:!0,poster:n.poster,className:"w-full aspect-video rounded-md m-0 shadow-lg",children:[(0,e.jsx)("source",{src:n.mp4,type:"video/mp4"}),(0,e.jsx)("source",{src:n.webm,type:"video/webm"}),"Download the ",(0,e.jsx)("a",{href:n.mp4,children:"mp4"})," ",(0,e.jsx)("a",{href:n.webm,children:"webm"})," video."]})})}var r=o(1370),l=o(9183),i=o(3044),p=o(8455),c=o(5027);function h(n){let s=Object.assign({h5:"h5",h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",a:"a",h3:"h3",strong:"strong"},(0,a.ah)(),n.components),{CodeGroup:o,Note:h}=s;return o||k("CodeGroup",!0),h||k("Note",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s.h5,{children:"dotenv-vault"}),"\n",(0,e.jsx)(s.h1,{children:"Quickstart ⚡️"}),"\n",(0,e.jsx)(s.p,{children:"Sync, manage, and deploy your secrets the dotenv-vault way using this quickstart guide.",className:"lead"}),"\n",(0,e.jsxs)("div",{className:"not-prose grid grid-flow-col auto-cols-max gap-x-6 gap-y-10",children:[(0,e.jsx)(l.q,{className:"h-9 w-9 text-[#339933]"}),(0,e.jsx)(i.g,{className:"h-9 w-9 text-[#3776AB]"}),(0,e.jsx)(p.w,{className:"h-9 w-9 text-[#CC342D]"}),(0,e.jsx)(c.C,{className:"h-10 w-10 text-[#00ADD8]"})]}),"\n",(0,e.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,e.jsx)(s.p,{children:"Install the necessary libraries for your application in the language of your choice."}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsx)(s.pre,{language:"bash",code:"npm init\nnpm install express express dotenv --save\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npm init</span></span>\n<span><span style="color: var(--shiki-color-text)">npm install express express dotenv --save</span></span>\n<span></span>'}),title:"Node.js"}),(0,e.jsx)(s.pre,{language:"bash",code:"pip install --upgrade flask python-dotenv-vault\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">pip install --upgrade flask python-dotenv-vault</span></span>\n<span></span>'}),title:"Python"}),(0,e.jsx)(s.pre,{language:"bash",code:"bundle init\nbundle add sinatra puma dotenv-vault\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">bundle init</span></span>\n<span><span style="color: var(--shiki-color-text)">bundle add sinatra puma dotenv-vault</span></span>\n<span></span>'}),title:"Ruby"}),(0,e.jsx)(s.pre,{language:"bash",code:"go mod init hello-world\ngo get github.com/labstack/echo/v4\ngo get github.com/dotenv-org/godotenvvault\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">go mod init hello-world</span></span>\n<span><span style="color: var(--shiki-color-text)">go get github.com/labstack/echo/v4</span></span>\n<span><span style="color: var(--shiki-color-text)">go get github.com/dotenv-org/godotenvvault</span></span>\n<span></span>'}),title:"Go"})]}),"\n",(0,e.jsx)(s.p,{children:"Write the application code."}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsx)(s.pre,{language:"js",code:"// index.js\nrequire('dotenv').config()\nconst express = require('express')\nconst app = express()\nconst port = process.env.PORT || 3000\n\napp.get('/', (req, res) => {\n  res.send(`Hello ${process.env.HELLO}`)\n})\n\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}`)\n})\n",children:(0,e.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// index.js</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">express</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">port</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> (req</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> res) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.send</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.listen</span><span style="color: var(--shiki-color-text)">(port</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Example app listening on port </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">port</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"Node.js"}),(0,e.jsx)(s.pre,{language:"python",code:'# index.py\nimport os\n\nfrom dotenv_vault import load_dotenv\nload_dotenv()\n\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\'/\')\ndef hello():\n  hello = os.getenv("HELLO")\n  return f"Hello {hello}"\n',children:(0,e.jsx)(s.code,{className:"language-python",children:'<span><span style="color: var(--shiki-token-comment)"># index.py</span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> os</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> dotenv_vault </span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> load_dotenv</span></span>\n<span><span style="color: var(--shiki-token-function)">load_dotenv</span><span style="color: var(--shiki-token-punctuation)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> flask </span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> Flask</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">app </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Flask</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-constant)">__name__</span><span style="color: var(--shiki-token-punctuation)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-function)">@app</span><span style="color: var(--shiki-token-punctuation)">.</span><span style="color: var(--shiki-token-function)">route</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/&#39;</span><span style="color: var(--shiki-token-punctuation)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">def</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">hello</span><span style="color: var(--shiki-color-text)">():</span></span>\n<span><span style="color: var(--shiki-color-text)">  hello </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> os</span><span style="color: var(--shiki-token-punctuation)">.</span><span style="color: var(--shiki-token-function)">getenv</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-punctuation)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">f</span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-constant)">{</span><span style="color: var(--shiki-color-text)">hello</span><span style="color: var(--shiki-token-constant)">}</span><span style="color: var(--shiki-token-string-expression)">&quot;</span></span>\n<span></span>'}),title:"Python"}),(0,e.jsx)(s.pre,{language:"ruby",code:'# index.rb\nrequire "dotenv-vault/load"\nrequire "sinatra"\n\nget "/" do\n  "Hello #{ENV["HELLO"]}"\nend\n',children:(0,e.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-comment)"># index.rb</span></span>\n<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;dotenv-vault/load&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;sinatra&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">get </span><span style="color: var(--shiki-token-string-expression)">&quot;/&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">do</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-string-expression)">#{</span><span style="color: var(--shiki-token-constant)">ENV</span><span style="color: var(--shiki-token-string-expression)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-string-expression)">]}</span><span style="color: var(--shiki-token-string-expression)">&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">end</span></span>\n<span></span>'}),title:"Ruby"}),(0,e.jsx)(s.pre,{language:"go",code:'// index.go\npackage main\n\nimport (\n    "net/http"\n    "log"\n    "os"\n\n    "github.com/labstack/echo/v4"\n    "github.com/dotenv-org/godotenvvault"\n)\n\nfunc main() {\n    err := godotenvvault.Load()\n    if err != nil {\n      log.Fatal("Error loading .env file")\n    }\n\n    hello := os.Getenv("HELLO")\n    output := "Hello " + hello\n\n    e := echo.New()\n    e.GET("/", func(c echo.Context) error {\n        return c.String(http.StatusOK, output)\n    })\n    e.Logger.Fatal(e.Start(":1323"))\n}\n',children:(0,e.jsx)(s.code,{className:"language-go",children:'<span><span style="color: var(--shiki-token-comment)">// index.go</span></span>\n<span><span style="color: var(--shiki-token-keyword)">package</span><span style="color: var(--shiki-color-text)"> main</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> (</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;net/http&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;log&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;os&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;github.com/labstack/echo/v4&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;github.com/dotenv-org/godotenvvault&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">func</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>\n<span><span style="color: var(--shiki-color-text)">    err </span><span style="color: var(--shiki-token-keyword)">:=</span><span style="color: var(--shiki-color-text)"> godotenvvault.</span><span style="color: var(--shiki-token-function)">Load</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> err </span><span style="color: var(--shiki-token-keyword)">!=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nil</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">      log.</span><span style="color: var(--shiki-token-function)">Fatal</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;Error loading .env file&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    hello </span><span style="color: var(--shiki-token-keyword)">:=</span><span style="color: var(--shiki-color-text)"> os.</span><span style="color: var(--shiki-token-function)">Getenv</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">    output </span><span style="color: var(--shiki-token-keyword)">:=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello &quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> hello</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    e </span><span style="color: var(--shiki-token-keyword)">:=</span><span style="color: var(--shiki-color-text)"> echo.</span><span style="color: var(--shiki-token-function)">New</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-color-text)">    e.</span><span style="color: var(--shiki-token-function)">GET</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;/&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-keyword)">func</span><span style="color: var(--shiki-color-text)">(c echo.Context) </span><span style="color: var(--shiki-token-keyword)">error</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> c.</span><span style="color: var(--shiki-token-function)">String</span><span style="color: var(--shiki-color-text)">(http.StatusOK, output)</span></span>\n<span><span style="color: var(--shiki-color-text)">    })</span></span>\n<span><span style="color: var(--shiki-color-text)">    e.Logger.</span><span style="color: var(--shiki-token-function)">Fatal</span><span style="color: var(--shiki-color-text)">(e.</span><span style="color: var(--shiki-token-function)">Start</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;:1323&quot;</span><span style="color: var(--shiki-color-text)">))</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"Go"})]}),"\n",(0,e.jsxs)(s.p,{children:["Create your ",(0,e.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:'# .env\nHELLO="World"\n',children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,e.jsx)(s.p,{children:"Run your application."}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsx)(s.pre,{language:"bash",code:"node index.js\n# visit http://localhost:3000\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">node index.js</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:3000</span></span>\n<span></span>'}),title:"Node.js"}),(0,e.jsx)(s.pre,{language:"bash",code:"flask --app index run\n# visit http://127.0.0.1:5000\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">flask --app index run</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://127.0.0.1:5000</span></span>\n<span></span>'}),title:"Python"}),(0,e.jsx)(s.pre,{language:"bash",code:"ruby index.rb\n# visit http://localhost:4567\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">ruby index.rb</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:4567</span></span>\n<span></span>'}),title:"Ruby"}),(0,e.jsx)(s.pre,{language:"bash",code:"go run index.go\n# visit http://localhost:1323\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">go run index.go</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:1323</span></span>\n<span></span>'}),title:"Go"})]}),"\n",(0,e.jsxs)(s.p,{children:["Visit ",(0,e.jsx)(s.a,{href:"http://localhost:3000",children:"localhost:3000"}),' and you will see "Hello World".']}),"\n",(0,e.jsx)(r.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,e.jsxs)(s.p,{children:["Next, sync your ",(0,e.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,e.jsx)(s.h2,{id:"sync",children:"Sync"}),"\n",(0,e.jsxs)(s.p,{children:["Push and pull changes to your ",(0,e.jsx)(s.code,{children:".env"})," file. Begin by creating your project's env vault and authenticating against it."]}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"npx dotenv-vault@latest new\nnpx dotenv-vault@latest login\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest new</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest login</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.p,{children:"Push and pull your .env file securely."}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest pull\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest pull</span></span>\n<span></span>'})}),"\n",(0,e.jsxs)(s.p,{children:["That's it! You synced our ",(0,e.jsx)(s.code,{children:".env"})," file. Next, configure your production secrets."]}),"\n",(0,e.jsx)(s.h2,{id:"manage",children:"Manage"}),"\n",(0,e.jsxs)(s.p,{children:["Open the production environment to edit the production ",(0,e.jsx)(s.code,{children:"HELLO"})," value."]}),"\n",(0,e.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest open production\n",children:(0,e.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,e.jsxs)(s.p,{children:["Edit the ",(0,e.jsx)(s.code,{children:"HELLO"})," value so that your production secrets will render as ",(0,e.jsx)(s.code,{children:"Hello production"}),"."]}),"\n",(0,e.jsx)(r.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,e.jsxs)(s.p,{children:["Looking good. Next, deploy your production secrets using your encrypted ",(0,e.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,e.jsx)(s.h2,{id:"deploy",children:"Deploy"}),"\n",(0,e.jsxs)(s.p,{children:["Begin by building your project's encrypted ",(0,e.jsx)(s.code,{children:".env.vault"})," file. It securely encrypts your secrets in a cloud-agnostic payload."]}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"npx dotenv-vault@latest build\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(s.p,{children:"Commit that safely to code."}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:'git add .env.vault\ngit commit -am "Build encrypted .env.vault file for deploy"\n',children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">git add .env.vault</span></span>\n<span><span style="color: var(--shiki-color-text)">git commit -am </span><span style="color: var(--shiki-token-string-expression)">&quot;Build encrypted .env.vault file for deploy&quot;</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(h,{children:(0,e.jsxs)(s.p,{children:["Yes it safe AND recommended you commit the ",(0,e.jsx)(s.code,{children:".env.vault"})," file to code. It contains AES-256 GCM encrypted ciphers of your environment secrets - that are decrypted just-in-time using an environment ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"}),"."]})}),"\n",(0,e.jsxs)(s.p,{children:["Fetch your production decryption key - the ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," - to decrypt your ",(0,e.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,e.jsx)(s.pre,{language:"bash",code:"npx dotenv-vault@latest keys production\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span></span>'})}),"\n",(0,e.jsxs)(s.p,{children:["This will output your production ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"}),". Use that ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," to run your application in production mode."]}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsx)(s.pre,{language:"bash",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' node index.js\n# visit http://localhost:3000\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> node index.js</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:3000</span></span>\n<span></span>'}),title:"Node.js"}),(0,e.jsx)(s.pre,{language:"bash",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' flask --app index run\n# visit http://127.0.0.1:5000\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> flask --app index run</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://127.0.0.1:5000</span></span>\n<span></span>'}),title:"Python"}),(0,e.jsx)(s.pre,{language:"bash",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' ruby index.rb\n# visit http://localhost:4567\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> ruby index.rb</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:4567</span></span>\n<span></span>'}),title:"Ruby"}),(0,e.jsx)(s.pre,{language:"bash",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' go run index.go\n# visit http://localhost:1323\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> go run index.go</span></span>\n<span><span style="color: var(--shiki-token-comment)"># visit http://localhost:1323</span></span>\n<span></span>'}),title:"Go"})]}),"\n",(0,e.jsx)(r.c,{url:"/assets/img/docs/hello-production.png"}),"\n",(0,e.jsxs)(s.p,{children:["You will know it is working if you see the log message ",(0,e.jsx)(s.code,{children:"Loading env from encrypted .env.vault"}),"."]}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsx)(s.pre,{language:"bash",code:"$ hello-world: DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' node index.js\n[dotenv@16.3.1][INFO] Loading env from encrypted .env.vault\nExample app listening on port 3000\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ hello-world: DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> node index.js</span></span>\n<span><span style="color: var(--shiki-color-text)">[dotenv@16.3.1][INFO] Loading env from encrypted .env.vault</span></span>\n<span><span style="color: var(--shiki-color-text)">Example app listening on port 3000</span></span>\n<span></span>'}),title:"Node.js"}),(0,e.jsx)(s.pre,{language:"bash",code:"$ flask-hello-world: DOTENV_KEY='dotenv://:key_3889c2a7ed0ff28ccaf2984fdf020bf0e4a702ecfd2e0c00a129f838b0cb4e71@dotenv.org/vault/.env.vault?environment=production' flask --app index run\nINFO:dotenv_vault.main:Loading env from encrypted .env.vault\n * Serving Flask app 'index'\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ flask-hello-world: DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_3889c2a7ed0ff28ccaf2984fdf020bf0e4a702ecfd2e0c00a129f838b0cb4e71@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> flask --app index run</span></span>\n<span><span style="color: var(--shiki-color-text)">INFO:dotenv_vault.main:Loading env from encrypted .env.vault</span></span>\n<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> Serving Flask app </span><span style="color: var(--shiki-token-string-expression)">&#39;index&#39;</span></span>\n<span></span>'}),title:"Python"}),(0,e.jsx)(s.pre,{language:"bash",code:"$ hello-world: DOTENV_KEY='dotenv://:1234@dotenv.org/vault/.env.vault?environment=production' ruby index.rb\nINFO -- : [dotenv-vault] Loading env from encrypted .env.vault\n== Sinatra (v3.0.6) has taken the stage on 4567 for development with backup from Puma\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ hello-world: DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> ruby index.rb</span></span>\n<span><span style="color: var(--shiki-color-text)">INFO -- </span><span style="color: var(--shiki-token-function)">:</span><span style="color: var(--shiki-color-text)"> [dotenv-vault] Loading env from encrypted .env.vault</span></span>\n<span><span style="color: var(--shiki-color-text)">== Sinatra (v3.0.6) has taken the stage on 4567 </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> development with backup from Puma</span></span>\n<span></span>'}),title:"Ruby"}),(0,e.jsx)(s.pre,{language:"bash",code:"$ hello-world: DOTENV_KEY='dotenv://:1234@dotenv.org/vault/.env.vault?environment=production' go run index.go\n[dotenv-vault] Loading env from encrypted .env.vault\n⇨ http server started on [::]:1323\n",children:(0,e.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">$ hello-world: DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> go run index.go</span></span>\n<span><span style="color: var(--shiki-color-text)">[dotenv-vault] Loading env from encrypted .env.vault</span></span>\n<span><span style="color: var(--shiki-color-text)">⇨ http server started on [::]:1323</span></span>\n<span></span>'}),title:"Go"})]}),"\n",(0,e.jsxs)(s.p,{children:["That's it! The ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," decrypts the production contents of ",(0,e.jsx)(s.code,{children:".env.vault"})," and injects its secrets just-in-time to your running process."]}),"\n",(0,e.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,e.jsxs)(s.p,{children:["Congrats! You now understand how ",(0,e.jsx)(s.code,{children:".env.vault"})," works. This is much safer than syncing your secrets to third-parties where they could leak. ",(0,e.jsx)(s.a,{href:"https://techcrunch.com/2023/01/05/circleci-breach/",children:"CircleiCi had a secrets breach not long ago"}),". ",(0,e.jsx)(s.code,{children:".env.vault"})," protects you from breaches like that. An attacker would have to get their hands on both your ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," AND your codebase. That is much more difficult."]}),"\n",(0,e.jsx)(s.p,{children:"In addition, you now have a single source of truth that is easy to manage. Make a change in the UI, run the build command, and redeploy. Spend less time juggling secrets and more time coding."}),"\n",(0,e.jsxs)(s.p,{children:["All that's left to do is set your ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," on your production server and deploy your code."]}),"\n",(0,e.jsx)(s.p,{children:"For example on heroku it is as easy as:"}),"\n",(0,e.jsx)(s.pre,{language:"shell",code:"$ heroku config:set DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production'\n",children:(0,e.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">$ heroku config:set DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(t,{poster:"/assets/img/cloudinary/deploy-encrypted-vault_shdiav.gif",mp4:"/assets/img/cloudinary/deploy-encrypted-vault_shdiav.mp4",webm:"/assets/img/cloudinary/deploy-encrypted-vault_shdiav.webm"}),"\n",(0,e.jsx)(s.h2,{id:"faq",children:"FAQ"}),"\n",(0,e.jsxs)(s.h3,{children:["What happens if ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"})," is not set?"]}),"\n",(0,e.jsxs)(s.p,{children:["It gracefully falls back to loading from your ",(0,e.jsx)(s.code,{children:".env"})," file. This is the default for development so that you can focus on editing your ",(0,e.jsx)(s.code,{children:".env"})," file and save the ",(0,e.jsx)(s.code,{children:"build"})," command until you are ready to deploy those environment variables changes."]}),"\n",(0,e.jsxs)(s.h3,{children:["Should I commit my ",(0,e.jsx)(s.code,{children:".env"})," file?"]}),"\n",(0,e.jsxs)(s.p,{children:["No. We ",(0,e.jsx)(s.strong,{children:"strongly"})," recommend against committing your ",(0,e.jsx)(s.code,{children:".env"})," file to version control. It should only include environment-specific values such as database passwords or API keys. Your production database should have a different password than your development database."]}),"\n",(0,e.jsxs)(s.h3,{children:["Should I commit my ",(0,e.jsx)(s.code,{children:".env.vault"})," file?"]}),"\n",(0,e.jsx)(s.p,{children:"Yes. It is safe and recommended to do so. It contains your encrypted envs, and your vault identifier."}),"\n",(0,e.jsxs)(s.h3,{children:["Can I share the ",(0,e.jsx)(s.code,{children:"DOTENV_KEY"}),"?"]}),"\n",(0,e.jsx)(s.p,{children:"No. It is the key that unlocks your encrypted environment variables. Be very careful who you share this key with. Do not let it leak."})]})}var d=!0,v=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(h,n)})):h(n)};function k(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=4731)}),_N_E=n.O()}]);